apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    app: your-race
    io.kompose.service: your-race
  name: your-race
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: your-race
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
        prometheus.io/path: /actuator/prometheus
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
      creationTimestamp: null
      labels:
        app: your-race
        io.kompose.service: your-race
    spec:
      containers:
        - env:
            - name: JDBC_DATABASE_PASSWORD
              value: admin
            - name: JDBC_DATABASE_URL
              value: jdbc:postgresql://pgdb:5432/racedb
            - name: JDBC_DATABASE_USERNAME
              value: admin
            - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
              value: admin          
            - name: SPRING_DATA_MONGODB_HOST
              value: mongodb   
            - name: SPRING_DATA_MONGODB.PORT
              value: "27017"
            - name: SPRING_DATA_MONGODB_USERNAME
              value: "root"    
            - name: SPRING_DATA_MONGODB_PASSWORD
              value: "password"
            - name: SPRING_DATA_MONGODB_DATABASE
              value: racedb      
            - name: SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE
              value: "40"
          image: raquetelio/your-race:v20221113
          name: your-race
          ports:
            - name: web
              containerPort: 8080
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 700m
              memory: 768Mi
      restartPolicy: Always
status: {}
