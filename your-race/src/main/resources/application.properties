spring.datasource.url=${JDBC_DATABASE_URL\:jdbc\:postgresql\://localhost\:5555/racedb}
spring.datasource.username=${JDBC_DATABASE_USERNAME\:admin}
spring.datasource.password=${JDBC_DATABASE_PASSWORD\:admin}
spring.datasource.dbcp2.max-wait-millis=30000
spring.datasource.dbcp2.validation-query=SELECT 1
spring.datasource.dbcp2.validation-query-timeout=30
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true
springdoc.pathsToMatch=/api/**

togglz.features.usecb.enabled=false
togglz.features.rabbitproducer.enabled=false
togglz.feature-enums=es.codeurjc.mastercloudapps.your_race.Features
togglz.console.enabled=true
togglz.console.path=/togglz-console
togglz.console.secured=false
togglz.console.use-management-port=false
togglz.enabled=true

management.endpoint.info.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.togglz.enabled=true
management.endpoints.web.exposure.include=*
management.security.enabled=false

################################
# Stream cloud and broker config
################################

# Funcional model: definition of consumers and producers (name of the bean method)
spring.cloud.stream.function.definition:consumer;producer

##########
# Producer
##########
spring.cloud.stream.source=producer
spring.cloud.stream.function.bindings.producer-out-0=output
spring.cloud.stream.bindings.output.destination=raceByOrderCreationProgressNotifications
spring.cloud.stream.bindings.output.group=raceByOrderCreationProgressNotifications
spring.cloud.stream.bindings.output.producer.required-groups=raceByOrderCreationProgressNotifications
# Rabbit spacific (do not create exchanges, as js code does not expect them, just a queue)
spring.cloud.stream.rabbit.bindings.output.producer.queue-name-group-only=true

##########
# Consumer
##########
spring.cloud.stream.function.bindings.consumer-in-0=input
spring.cloud.stream.bindings.input.destination=raceByOrderCreationProgressNotifications
spring.cloud.stream.bindings.input.group=raceByOrderCreationProgressNotifications
# Rabbit specific (do not add a prefix to queue name)
spring.cloud.stream.rabbit.bindings.input.consumer.queue-name-group-only=true

####################
# Connection details
####################

# Rabbit connection details
spring.cloud.stream.rabbit.binder.nodes=localhost:5672

# Default broker
spring.cloud.stream.default-binder=rabbit